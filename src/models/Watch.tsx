/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { Mesh, MeshStandardMaterial, Group } from "three";
import { useRef } from "react";
import { useFrame } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { SCENE } from "../state/Config";

type GLTFResult = GLTF & {
  nodes: {
    huaweishoubiao_low: Mesh;
  };
  materials: {
    huaweishoubiao: MeshStandardMaterial;
  };
};

export function Watch(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("./models/watch2.glb") as GLTFResult;
  const groupRef = useRef<Group>(null);

  useFrame((_, delta) => {
    groupRef.current!.rotation.y += delta * SCENE.ROTATION_RATE;
  });

  return (
    <group ref={groupRef} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.huaweishoubiao_low.geometry}
        material={materials.huaweishoubiao}
        position={[-0.139, 3.172, 0.003]}
        scale={9.27}
      />
    </group>
  );
}

useGLTF.preload("./models/watch2.glb");
